name: 1. Create tag

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Tests
        run: cargo test

      - name: Get Current Version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep -m 1 '^version =' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump Version
        id: bump_version
        run: |
          CURRENT_VERSION=${{ env.CURRENT_VERSION }}
          RELEASE_TYPE=${{ github.event.inputs.release_type }}
          
          # Split version into major, minor, and patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment the appropriate version part
          if [ "$RELEASE_TYPE" = "patch" ]; then
            PATCH=$((PATCH + 1))
          elif [ "$RELEASE_TYPE" = "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [ "$RELEASE_TYPE" = "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Update Cargo.toml with New Version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ env.NEW_VERSION }}\"/" Cargo.toml
          cat Cargo.toml | grep "^version ="

      - name: Commit Version Update
        run: |
          git config --global user.name "Anything Bot"
          git config --global user.email "git-anything-bot@anything.sh"
          git add Cargo.toml
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin main

      - name: Create Git Tag
        run: |
          git tag v${{ env.NEW_VERSION }}
          git push --tags
